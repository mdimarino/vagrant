---
# tasks file for hadoop

- name: change /etc/hosts
  copy: src=hosts dest=/etc/hosts owner=root group=root mode=0644 backup=yes

- name: add group hadoop
  group: name=hadoop

- name: add user hadoop
  user: name=hadoop comment='Hadoop User Account' createhome=yes group=hadoop shell=/bin/bash state=present

- name: change .bashrc file for user hadoop
  copy: src=.bashrc.hadoop dest=/home/hadoop/.bashrc owner=hadoop group=hadoop mode=0644 backup=yes

- name: set authorized_key hadoop user
  authorized_key: user=hadoop key='{{ item }}' state=present
  with_file:
    - files/authorized_keys.hadoop

- name: set /home/hadoop/.ssh/config
  copy: src=config.ssh dest=/home/hadoop/.ssh/config owner=hadoop group=hadoop mode=0600 backup=yes

- name: set /home/hadoop/.ssh/id_rsa
  copy: src=id_rsa.hadoop dest=/home/hadoop/.ssh/id_rsa owner=hadoop group=hadoop mode=0600 backup=yes

- name: set /home/hadoop/.ssh/id_rsa.pub
  copy: src=id_rsa.pub.hadoop dest=/home/hadoop/.ssh/id_rsa.pub owner=hadoop group=hadoop mode=0644 backup=yes

- name: install packages
  apt: name={{ item }} state=present autoremove=yes
  with_items:
    - openjdk-8-jdk-headless
    - pdsh

- name: unarchive hadoop 2.8.3 local package
  unarchive: src=/home/mazevedo/Documentos/git/vagrant/hadoop/hadoop-2.8.3.tar.gz dest=/opt remote_src=no owner=hadoop group=hadoop creates=/opt/hadoop/bin/hadoop

- name: create symbolic link /opt/hadoop
  file: src=/opt/hadoop-2.8.3 dest=/opt/hadoop owner=hadoop group=hadoop state=link

- name: change /etc/profile.d/java.sh
  copy: src=java.sh dest=/etc/profile.d/java.sh owner=root group=root mode=0644 backup=yes

- name: change /etc/profile.d/hadoop.sh
  copy: src=hadoop.sh dest=/etc/profile.d/hadoop.sh owner=root group=root mode=0644 backup=yes

- name: change /opt/hadoop/etc/hadoop/hadoop-env.sh
  copy: src=hadoop-env.sh dest=/opt/hadoop/etc/hadoop/hadoop-env.sh owner=hadoop group=hadoop mode=0644 backup=yes

- name: change /opt/hadoop/etc/hadoop/core-site.xml
  copy: src=core-site.xml dest=/opt/hadoop/etc/hadoop/core-site.xml owner=hadoop group=hadoop mode=0644 backup=yes

- name: change /opt/hadoop/etc/hadoop/hdfs-site.xml
  copy: src=hdfs-site.xml dest=/opt/hadoop/etc/hadoop/hdfs-site.xml owner=hadoop group=hadoop mode=0644 backup=yes

- name: change /opt/hadoop/etc/hadoop/mapred-site.xml
  copy: src=mapred-site.xml dest=/opt/hadoop/etc/hadoop/mapred-site.xml owner=hadoop group=hadoop mode=0644 backup=yes

- name: change /opt/hadoop/etc/hadoop/yarn-site.xml
  copy: src=yarn-site.xml dest=/opt/hadoop/etc/hadoop/yarn-site.xml owner=hadoop group=hadoop mode=0644 backup=yes

- name: change /opt/hadoop/etc/hadoop/slaves
  copy: src=slaves dest=/opt/hadoop/etc/hadoop/slaves owner=hadoop group=hadoop mode=0644 backup=yes

- name: check if /opt/hadoop/data exists
  stat: path=/opt/hadoop/data
  register: hadoop_data_exists

- name: format HDFS
  shell: /opt/hadoop/bin/hdfs namenode -format
  when:
    - "'hadoop-1' in inventory_hostname"
    - not hadoop_data_exists.stat.exists
  become: true
  become_user: hadoop

- name: start HDFS
  shell: /opt/hadoop/sbin/start-dfs.sh
  when:
    - "'hadoop-1' in inventory_hostname"
  become: true
  become_user: hadoop

- name: start yarn
  shell: /opt/hadoop/sbin/start-yarn.sh
  when:
    - "'hadoop-1' in inventory_hostname"
  become: true
  become_user: hadoop
